Being able to pass function values to other functions is a deeply useful aspect of
JavaScript. It allows us to write functions that model computations with “gaps” in them.
The code that calls these functions can fill in the gaps by providing function values.

Arrays provide a number of useful higher-order methods. You can use forEach to loop over
the elements in an array. The filter method returns a new array containing only the elements
that pass the predicate function. Transforming an array by putting each element through a
function is done with map. You can use reduce to combine all the elements in an array into
a single value. The some method tests whether any element matches a given predicate
function. And findIndex finds the position of the first element that matches a predicate.